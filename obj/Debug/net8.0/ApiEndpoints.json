[
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "Post",
    "RelativePath": "api/Bike",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productDTO",
        "Type": "Bike_Store_App_WebApi.DTO.ProductDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "GetBikeByBrand",
    "RelativePath": "api/Bike/byBrand/{brand}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "brand",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "GetBikesByCategory",
    "RelativePath": "api/Bike/byCategory/{category}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "category",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "GetAllProducts",
    "RelativePath": "api/Bike/products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "GetProductById",
    "RelativePath": "api/Bike/products/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Bike/products/{productId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "productDTO",
        "Type": "Bike_Store_App_WebApi.DTO.ProductDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Bike/products/{productId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.BikeController",
    "Method": "GetBikeBySearch",
    "RelativePath": "api/Bike/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "searchBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "filterValue",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.CategoriesController",
    "Method": "GetCategoryById",
    "RelativePath": "api/Categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.CategoriesController",
    "Method": "AddCategory",
    "RelativePath": "api/Categories/categories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDTO",
        "Type": "Bike_Store_App_WebApi.DTO.CategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.CategoriesController",
    "Method": "GetAllCategories",
    "RelativePath": "api/Categories/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.CategoriesController",
    "Method": "DeleteCategory",
    "RelativePath": "api/Categories/categories/{categoryId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.InventoriesController",
    "Method": "ViewAllInventoryDetails",
    "RelativePath": "api/Inventories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Bike_Store_App_WebApi.DTO.InventoryDTO, Bike_Store_App_WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.InventoriesController",
    "Method": "AddInventoryDetails",
    "RelativePath": "api/Inventories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "inventoryDTO",
        "Type": "Bike_Store_App_WebApi.DTO.InventoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.InventoriesController",
    "Method": "UpdateInventoryDetails",
    "RelativePath": "api/Inventories/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "inventoryDTO",
        "Type": "Bike_Store_App_WebApi.DTO.InventoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.InventoriesController",
    "Method": "DeleteInventoryDeatils",
    "RelativePath": "api/Inventories/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.InventoriesController",
    "Method": "ViewInventoryDetailsForASpecificProduct",
    "RelativePath": "api/Inventories/{productId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "productId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Bike_Store_App_WebApi.Models.Inventory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Bike_Store_App_WebApi.Controllers.SalesController",
    "Method": "GetSalesReports",
    "RelativePath": "api/Sales/sales/reports",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "frequency",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "BikeStoreApi.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[BikeStoreApi.WeatherForecast, Bike_Store_App_WebApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]